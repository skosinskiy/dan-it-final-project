{"version":3,"sources":["serviceWorker.js","helpers/FetchData/index.js","store/users/actions.js","store/users/types.js","store/users/operations.js","store/users/reducer.js","store/users/index.js","store/places/actions.js","store/places/types.js","store/places/operations.js","store/places/reducer.js","store/places/index.js","store/forgotPassword/operations.js","store/forgotPassword/actions.js","store/forgotPassword/types.js","store/forgotPassword/reducer.js","store/forgotPassword/index.js","store/resetPassword/operations.js","store/resetPassword/actions.js","store/resetPassword/types.js","store/resetPassword/reducer.js","store/resetPassword/index.js","store/buildings/types.js","store/buildings/reducer.js","store/buildings/index.js","store/businessCategory/operations.js","store/businessCategory/actions.js","store/businessCategory/types.js","store/businessCategory/reducer.js","store/businessCategory/index.js","store/eventCategory/operations.js","store/eventCategory/actions.js","store/eventCategory/types.js","store/eventCategory/reducer.js","store/eventCategory/index.js","store/menuItems/types.js","store/menuItems/actions.js","store/menuItems/operations.js","store/menuItems/reducer.js","store/menuItems/index.js","store/rootReducer.js","store/index.js","ui/theme.js","RootProviders.js","components/Preloader/index.js","utils/roles.js","constants/permissions.js","pages/admin/components/ManageBusinessCategory/BusinessCategoryItem/index.js","pages/admin/components/ManageBusinessCategory/index.js","pages/admin/components/ManageBusinessCategory/BusinessCategoryForm/index.js","pages/admin/components/ManageEventCategory/EventCategoryItem/index.js","pages/admin/components/ManageEventCategory/index.js","pages/admin/components/ManageEventCategory/EventCategoryForm/index.js","pages/admin/components/ManagingUserRoles/Searchbar/index.js","pages/admin/components/ManagingUserRoles/UsersList/UserItem/index.js","pages/admin/components/ManagingUserRoles/UsersList/index.js","pages/admin/components/ManagingUserRoles/index.js","pages/admin/components/Places/PLaceItem/index.js","pages/admin/components/Places/index.js","pages/admin/components/Places/PLaceForm/index.js","pages/admin/components/PlaceCategories/MenuItemMultipleSelect.js","index.js","pages/admin/components/PlaceCategories/PlaceCategories.js","pages/admin/components/PlaceCategories/SubmitButton.js","pages/admin/components/PlaceCategories/index.js","pages/admin/routes.js","components/SidebarMenu/index.js","pages/admin/index.js","pages/auth/login/index.js","pages/auth/forgotPassword/index.js","pages/auth/resetPassword/index.js","pages/index.js","components/ToastrMessage/index.js","App.js"],"names":["Boolean","window","location","hostname","match","api","FetchData","Object","classCallCheck","this","createClass","key","value","url","requestParams","makeRequest","body","method","reqParams","data","params","objectSpread","headers","Content-Type","sendRequest","_this","Promise","resolve","reject","axios","then","result","catch","reason","requestFailed","message","toastr","error","response","getRolesList","userRoles","type","payload","setUserRoles","_ref","updatedUserList","changedUsersList","getUsersRequest","getUsersByEmail","_ref2","users","page","totalElements","email","getUsersError","currentUserLoading","isLoading","currentUserFetched","currentUser","changePaginationPage","getUserRoles","dispatch","get","res","ACTIONS","saveUserRoles","userId","roles","put","concat","size","content","pageable","pageNumber","err","submitLoginForm","event","preventDefault","FormData","target","post","status","getCurrentUser","user","finally","logOutUser","reload","loginWithOAuth","client","replace","initialState","isAuthenticated","isCurrentUserLoading","usersListByEmail","isLoaded","reducer","state","arguments","length","undefined","action","_action$payload","getAllPlaces","places","getPlacesCategories","placeCategories","getPlaces","saveNewPlace","place","deletePlace","placeId","deleteApi","updatePlace","toConsumableArray","submitForgotPasswordForm","isFormSubmitted","submitResetPasswordForm","getFormDataAsObject","password","passwordConfirmation","JSON","stringify","formData","forEach","arePasswordsDifferent","GET_ALL_BUILDINGS","GET_BUILDINGS_CATEGORIES","buildings","buildingCategories","TYPES","getAllBusinessCategories","deleteBusinessCategory","categoryId","saveCategory","category","id","allBusinessCategories","getAllEventCategories","deleteEventCategory","allEventCategories","FETCH_AVAILABLE","IS_LOADING","fetchAvailableMenuItemNames","menuItems","availableMenuItemNames","isMenuItemNamesLoading","rootReducer","combineReducers","forgotPassword","resetPassword","businessCategory","eventCategory","toastrReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","theme","palette","common","black","white","primary","light","main","dark","contrastText","secondary","typography","withRoot","Component","react_default","a","createElement","react_redux_es","BrowserRouter","styled_components_browser_es","withStyles","progress","margin","spacing","unit","props","classes","className","CircularProgress_default","hasGrant","grant","i","permissions","j","indexOf","Grant","Places","_this$props","ListItem_default","Avatar_default","Image_default","ListItemText_default","name","parentCategory","NavLink","to","buttons","Button_default","variant","color","button","onClick","connect","businessCategories","businessCategoryOperations","root","width","maxWidth","backgroundColor","background","paper","textDecoration","marginRight","BusinessCategories","components_Preloader","businessCategoryItems","map","BusinessCategoryItem","List_default","display","justifyContent","marginTop","emptyCategory","BusinessCategoryForm","possibleConstructorReturn","getPrototypeOf","call","editedCategory","handleChange","propName","categories","find","setState","defineProperty","nextProps","_this2","_this$props2","categoryOptions","filter","c","toString","MenuItem_default","container","TextField_default","label","style","InputLabelProps","shrink","onChange","e","select","textField","SelectProps","MenuProps","menu","helperText","buttonLink","React","parseInt","flexDirection","marginLeft","dense","Events","eventCategories","eventCategoryOperations","EventCategories","eventCategoryItems","EventCategoryItem","EventCategoryForm","UserEmailSearchBar","findUsersByEmail","Paper_default","elevation","InputBase_default","onKeyPress","input","placeholder","IconButton_default","iconButton","aria-label","Search_default","usersOperations","padding","alignItems","flex","divider","height","PaperProps","maxHeight","ITEM_HEIGHT","UserItem","updateUsersList","role","some","userRole","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","multiple","Input_default","renderValue","selected","chips","Chip_default","chip","that","fontWeight","fontWeightRegular","fontWeightMedium","selectedRoles","userList","chengedUsers","item","isContain","push","usersActions","minWidth","flexWrap","withTheme","rows","numeric","disablePadding","EnhancedTableHead","TableHead_default","TableRow_default","row","TableCell_default","align","Tooltip_default","title","placement","enterDelay","TableSortLabel_default","UsersList","order","orderBy","rowsPerPage","saveUsersRoles","handleChangePage","updatePaginationPage","getAllUsers","_this$state","tableWrapper","Table_default","table","aria-labelledby","UsersList_EnhancedTableHead","rowCount","TableBody_default","hover","tabIndex","tableCell","component","scope","firstName","age","UsersList_UserItem","TablePagination_default","rowsPerPageOptions","labelRowsPerPage","count","backIconButtonProps","nextIconButtonProps","onChangePage","userListButtons","tableLayout","overflowX","textAlign","ManagingUsersRoles","Searchbar","ManagingUserRoles_UsersList","address","placeList","placesOperations","PLaceItem","emptyPLace","description","placeCategory","PlaceForm","savePlace","getPlaceCategories","noValidate","autoComplete","fullWidth","disabled","getStyles","MultipleSelect","handleChangeMultiple","options","l","names","noLabel","PlaceCategories","savePlaceCategories","changedPlaceCategories","resetListChanges","getAllCategories","placeCategoriesList","PlaceCategories_EnhancedTableHead","menuItemsActions","setMenuItems","ScreenMenuItems","components_PlaceCategories_PlaceCategories","MenuItemMultipleSelect","PlaceCategories_SubmitButton","withRouter","menuItemsOperations","AdminRouter","Switch","routes_AuthorizedRoute","authorized","path","ManagingUserRoles","ManageBusinessCategories","ManageEventCategories","AuthorizedRoute","authenticated","rest","objectWithoutProperties","Route","assign","render","Redirect","SidebarMenu","ListItemIcon_default","Dashboard_default","ShoppingCart_default","People_default","Layers_default","Event_default","Admin","open","handleDrawerOpen","handleDrawerClose","getUserRolesList","logoutUser","CssBaseline_default","AppBar_default","position","classNames","appBar","appBarShift","Toolbar_default","disableGutters","toolbar","menuButton","menuButtonHidden","Menu_default","Typography_default","noWrap","Badge_default","badgeContent","Notifications_default","alt","PowerSettingsNew_default","Drawer_default","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider_default","components_SidebarMenu","appBarSpacer","routes","paddingRight","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","flexGrow","whiteSpace","breakpoints","up","overflow","chartContainer","tableContainer","h5","marginBottom","Login","avatar","LockOutlined_default","socialWrapper","googleButton","form","onSubmit","required","autoFocus","FormControlLabel_default","control","Checkbox_default","submit","wrapper","ForgotPassword","forgotPasswordForm","afterSubmitContent","forgotPasswordOperations","fontSize","ResetPassword","token","getToken","resetPasswordForm","hidden","tokenArray","href","split","resetPasswordOperations","AppRoutes","pages_ProtectedRoute","ProtectedRoute","ToastrMessage","lib_default","timeOut","newestOnTop","preventDuplicates","transitionIn","transitionOut","progressBar","closeOnToastrClick","App","Fragment","CssBaseline","pages","components_ToastrMessage","rootDecorator","RootProviders","document","getElementById","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d2bc952.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n)\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import {toastr} from 'react-redux-toastr'\r\nimport axios from 'axios'\r\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css'\r\n\r\nconst METHOD_GET = 'get'\r\nconst METHOD_POST = 'post'\r\nconst METHOD_PUT = 'put'\r\nconst METHOD_DELETE = 'delete'\r\n\r\nexport class FetchData {\r\n  get (url, requestParams) {\r\n    return this.makeRequest(url, METHOD_GET, null, requestParams)\r\n  }\r\n\r\n  post (url, body, requestParams) {\r\n    return this.makeRequest(url, METHOD_POST, body, requestParams)\r\n  }\r\n\r\n  put (url, body, requestParams) {\r\n    return this.makeRequest(url, METHOD_PUT, body, requestParams)\r\n  }\r\n\r\n  deleteApi (url, requestParams) {\r\n    return this.makeRequest(url, METHOD_DELETE, null, requestParams)\r\n  }\r\n\r\n  makeRequest (url, method, body, reqParams) {\r\n    const requestParams = {\r\n      method: method || METHOD_GET,\r\n      data: body,\r\n      params: {\r\n        ...(reqParams || {})\r\n      }\r\n    }\r\n\r\n    if (method === METHOD_POST || method === METHOD_PUT) {\r\n      requestParams.headers = {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    return this.sendRequest(url, requestParams)\r\n  }\r\n\r\n  sendRequest (url, requestParams) {\r\n    return new Promise((resolve, reject) => {\r\n      axios(url, requestParams)\r\n        .then(result => resolve(result.data))\r\n        .catch(reason => {\r\n          this.requestFailed(reason)\r\n          reject(reason)\r\n        })\r\n    })\r\n  }\r\n\r\n  requestFailed (reason) {\r\n    if (reason.message) {\r\n      toastr.error(reason.message, reason.response && reason.response.data && reason.response.data.message)\r\n    } else {\r\n      toastr.error('Error', 'An error has occurred')\r\n    }\r\n  }\r\n}\r\n\r\nconst api = new FetchData()\r\n\r\nexport default api\r\n","import * as TYPES from './types'\r\n\r\nexport const getRolesList = (userRoles) => ({\r\n  type: TYPES.GET_ROLES_LIST,\r\n  payload: {userRoles}\r\n})\r\n\r\nexport const setUserRoles = ({updatedUserList, changedUsersList}) => ({\r\n  type: TYPES.SET_USER_ROLES,\r\n  payload: {updatedUserList, changedUsersList}\r\n})\r\n\r\nexport const getUsersRequest = () => ({\r\n  type: TYPES.USERS_REQUEST,\r\n})\r\n\r\nexport const getUsersByEmail = ({users, page, totalElements, email}) => ({\r\n  type: TYPES.GET_USERS_BY_EMAIL,\r\n  payload: {\r\n    users,\r\n    page,\r\n    totalElements,\r\n    email\r\n  }\r\n})\r\n\r\nexport const getUsersError = error => ({\r\n  type: TYPES.USERS_ERROR,\r\n  payload: error\r\n})\r\n\r\nexport const currentUserLoading = (isLoading) => ({\r\n  type: TYPES.CURRENT_USER_LOADING,\r\n  payload: isLoading\r\n})\r\n\r\nexport const currentUserFetched = (currentUser) => ({\r\n  type: TYPES.CURRENT_USER_FETCHED,\r\n  payload: {currentUser}\r\n})\r\n\r\nexport const changePaginationPage = (page) => ({\r\n  type: TYPES.CHANGE_PAGINATION_PAGE,\r\n  payload: {page}\r\n})\r\n\r\n\r\n\r\n\r\n\r\n","export const USERS_REQUEST = 'USERS_REQUEST'\r\nexport const GET_USERS_BY_EMAIL = 'GET_USERS_BY_EMAIL'\r\nexport const USERS_ERROR = 'USERS_ERROR'\r\nexport const CHANGE_PAGINATION_PAGE = 'CHANGE_PAGINATION_PAGE'\r\n\r\nexport const GET_ROLES_LIST = 'GET_ROLES_LIST'\r\nexport const SET_USER_ROLES = 'SET_USER_ROLES'\r\n\r\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER'\r\nexport const CURRENT_USER_FETCHED = 'CURRENT_USER_FETCHED'\r\nexport const CURRENT_USER_LOADING = 'CURRENT_USER_LOADING'\r\n","import api from '../../helpers/FetchData'\nimport * as ACTIONS from './actions'\n\nexport const getUserRoles = () => dispatch => {\n  api.get(`/api/roles`).then(res => {\n    dispatch(ACTIONS.getRolesList(res))\n  })\n}\n\nexport const saveUserRoles = (userId, roles) => dispatch => {\n  api.put(`api/users/${userId}/roles`, roles)\n}\n\nexport const getUsersByEmail = (email, page, size) => dispatch => {\n  dispatch(ACTIONS.getUsersRequest())\n\n  api.get(`/api/users?email=${email}&page=${page}&size=${size}`).then(res => {\n    dispatch(ACTIONS.getUsersByEmail({\n      users: res.content,\n      page: res.pageable.pageNumber,\n      totalElements: res.totalElements,\n      email: email\n    }))\n  }).catch(err => {\n    dispatch(ACTIONS.getUsersError(err))\n  })\n}\n\nexport const submitLoginForm = (event) => dispatch => {\n  event.preventDefault()\n  dispatch(ACTIONS.currentUserLoading(true))\n\n  const data = new FormData(event.target)\n  api.post('/auth', data).then(res => {\n    if (res.status === 200) {\n      dispatch(getCurrentUser())\n    }\n  })\n    .catch(() => dispatch(ACTIONS.currentUserLoading(false)))\n}\n\nexport const getCurrentUser = () => dispatch => {\n  dispatch(ACTIONS.currentUserLoading(true))\n  api.get('/api/users/current')\n    .then(user => {\n      if (user !== '') {\n        dispatch(ACTIONS.currentUserFetched(user))\n      }\n    })\n    .finally(() => {\n      dispatch(ACTIONS.currentUserLoading(false))\n    })\n}\n\nexport const logOutUser = () => dispatch => {\n  api.post('/logout')\n    .then(() => window.location.reload())\n}\n\nexport const loginWithOAuth = (client) => dispatch => {\n  window.location.replace(`/oauth2/authorization/${client}`)\n}\n","import * as TYPES from './types'\r\n\r\nconst initialState = {\r\n  currentUser: null,\r\n  email: '',\r\n  isAuthenticated: true,\r\n  isCurrentUserLoading: true,\r\n\r\n  usersListByEmail: [],\r\n  changedUsersList: [],\r\n  page: 0,\r\n  totalElements: 0,\r\n  userRoles: [],\r\n\r\n  isLoaded: false,\r\n  isLoading: false,\r\n  error: null\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TYPES.GET_ROLES_LIST:\r\n      return {\r\n        ...state,\r\n        userRoles: action.payload.userRoles\r\n      }\r\n    case TYPES.GET_USERS_BY_EMAIL:\r\n      const {users, page, totalElements, email} = action.payload\r\n      return {\r\n        ...state,\r\n        usersListByEmail: users,\r\n        page: page,\r\n        totalElements: totalElements,\r\n        email: email\r\n      }\r\n    case TYPES.CHANGE_PAGINATION_PAGE:\r\n      return {\r\n        ...state,\r\n        page: action.payload.page\r\n      }\r\n    case TYPES.SET_USER_ROLES:\r\n      return {\r\n        ...state,\r\n        usersListByEmail: action.payload.updatedUserList,\r\n        changedUsersList: action.payload.changedUsersList\r\n      }\r\n    case TYPES.CURRENT_USER_FETCHED:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload.currentUser\r\n      }\r\n    case TYPES.CURRENT_USER_LOADING:\r\n      return {\r\n        ...state,\r\n        isCurrentUserLoading: action.payload\r\n      }\r\n    default:\r\n      return {...state}\r\n  }\r\n}\r\n\r\nexport default usersReducer\r\n","import * as usersSelectors from './selectors'\r\nimport * as usersOperations from './operations'\r\nimport * as usersActions from './actions'\r\nimport reducer from './reducer'\r\n\r\nexport {usersSelectors, usersOperations, usersActions}\r\n\r\nexport default reducer\r\n","import * as TYPES from './types'\r\n\r\nexport const getAllPlaces = (places) => ({\r\n  type: TYPES.GET_ALL_PLACES,\r\n  payload: {places}\r\n})\r\n\r\nexport const getPlacesCategories = (placeCategories) => ({\r\n  type: TYPES.GET_PLACES_CATEGORIES,\r\n  payload: {placeCategories}\r\n})\r\n\r\n\r\n","export const GET_ALL_PLACES = 'GET_ALL_PLACES'\r\nexport const GET_PLACES_CATEGORIES = 'GET_PLACES_CATEGORIES'\r\nexport const GET_USERS_BY_EMAIL = 'GET_USERS_BY_EMAIL'\r\nexport const GET_PLACE_BY_ID = 'GET_PLACE_BY_ID'\r\n","import api from 'helpers/FetchData'\r\nimport * as ACTIONS from './actions'\r\n\r\nexport const getPlaces = () => dispatch => {\r\n  api.get(`/api/places`).then(res => {\r\n    dispatch(ACTIONS.getAllPlaces(res))\r\n  })\r\n}\r\n\r\nexport const saveNewPlace = (place) => dispatch => {\r\n  api.post(`/api/places`, place).then(res => {\r\n    api.get(`/api/places`).then(res => {\r\n      dispatch(ACTIONS.getAllPlaces(res))\r\n    })\r\n  })\r\n}\r\n\r\nexport const getPlacesCategories = () => dispatch => {\r\n  api.get(`/api/place-categories`).then(res => {\r\n    dispatch(ACTIONS.getPlacesCategories(res))\r\n  })\r\n}\r\n\r\nexport const deletePlace = (placeId) => dispatch => {\r\n  api.deleteApi(`/api/places/${placeId}`).then(res => {\r\n    api.get(`/api/places`).then(res => {\r\n      dispatch(ACTIONS.getPlacesCategories(res))\r\n    })\r\n  })\r\n}\r\n\r\nexport const updatePlace = (placeId, place) => dispatch => {\r\n  api.put(`/api/places/${placeId}`, place).then(res => {\r\n    api.get(`/api/places`).then(res => {\r\n      dispatch(ACTIONS.getPlacesCategories(res))\r\n    })\r\n  })\r\n}\r\n","import * as TYPES from './types'\r\n\r\nconst initialState = {\r\n  places: [],\r\n  placeCategories: []\r\n}\r\n\r\nconst placesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TYPES.GET_ALL_PLACES:\r\n      return {\r\n        ...state,\r\n        places: [...action.payload.places]\r\n      }\r\n    case TYPES.GET_PLACES_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        placeCategories: [...action.payload.placeCategories]\r\n      }\r\n    default:\r\n      return {...state}\r\n  }\r\n}\r\n\r\nexport default placesReducer\r\n","import * as placesOperations from './operations'\r\nimport * as placesActions from './actions'\r\nimport reducer from './reducer'\r\n\r\nexport {placesOperations, placesActions}\r\n\r\nexport default reducer\r\n","import api from 'helpers/FetchData'\r\nimport * as ACTIONS from './actions'\r\n\r\nexport const submitForgotPasswordForm = (event) => dispatch => {\r\n  event.preventDefault()\r\n  dispatch(ACTIONS.submitFormRequest())\r\n  const data = new FormData(event.target)\r\n  api.put('/api/users/forgot-password/token', data).then(() => {\r\n    dispatch(ACTIONS.submitFormSuccess())\r\n  }).catch(err => {\r\n    dispatch(ACTIONS.submitFormError(err))\r\n  })\r\n}\r\n","import * as TYPES from './types'\r\n\r\nexport const submitFormRequest = () => ({\r\n  type: TYPES.SUBMIT_FORM_REQUEST\r\n})\r\n\r\nexport const submitFormSuccess = () => ({\r\n  type: TYPES.SUBMIT_FORM_SUCCESS\r\n})\r\n\r\nexport const submitFormError = (err) => ({\r\n  type: TYPES.SUBMIT_FORM_ERROR,\r\n  payload: err\r\n})\r\n","export const SUBMIT_FORM_REQUEST = 'SUBMIT_FORM_REQUEST'\r\nexport const SUBMIT_FORM_SUCCESS = 'SUBMIT_FORM_SUCCESS'\r\nexport const SUBMIT_FORM_ERROR = 'SUBMIT_FORM_ERROR'\r\n","import * as TYPES from './types'\r\n\r\nconst initialState = {\r\n  isFormSubmitted: false,\r\n  isLoading: false,\r\n  error: null\r\n}\r\n\r\nconst forgotPassword = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TYPES.SUBMIT_FORM_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: initialState.isLoading,\r\n        isFormSubmitted: initialState.isFormSubmitted,\r\n        error: initialState.error\r\n      }\r\n    case TYPES.SUBMIT_FORM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isFormSubmitted: true\r\n      }\r\n    case TYPES.SUBMIT_FORM_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return {...state}\r\n  }\r\n}\r\n\r\nexport default forgotPassword\r\n","import * as forgotPasswordOperations from './operations'\r\nimport reducer from './reducer'\r\n\r\nexport {forgotPasswordOperations}\r\n\r\nexport default reducer\r\n","import api from 'helpers/FetchData'\r\nimport * as ACTIONS from './actions'\r\n\r\nexport const submitResetPasswordForm = (event) => dispatch => {\r\n  event.preventDefault()\r\n  const data = getFormDataAsObject(new FormData(event.target))\r\n\r\n  if (data.password === data.passwordConfirmation) {\r\n    dispatch(ACTIONS.submitFormRequest())\r\n\r\n    api.put('/api/users/forgot-password/update', JSON.stringify(data)).then(() => {\r\n      dispatch(ACTIONS.submitFormSuccess())\r\n    }).catch(err => {\r\n      dispatch(ACTIONS.submitFormError(err))\r\n    })\r\n\r\n  } else {\r\n    dispatch(ACTIONS.passwordsAreDifferent())\r\n  }\r\n}\r\n\r\nconst getFormDataAsObject = formData => {\r\n  const data = {}\r\n  formData.forEach((value, key) => {\r\n    data[key] = value\r\n  })\r\n  return data\r\n}\r\n","import * as TYPES from './types'\r\n\r\nexport const submitFormRequest = () => ({\r\n  type: TYPES.SUBMIT_FORM_REQUEST\r\n})\r\n\r\nexport const submitFormSuccess = () => ({\r\n  type: TYPES.SUBMIT_FORM_SUCCESS\r\n})\r\n\r\nexport const submitFormError = (err) => ({\r\n  type: TYPES.SUBMIT_FORM_ERROR,\r\n  payload: err\r\n})\r\n\r\nexport const passwordsAreDifferent = () => ({\r\n  type: TYPES.PASSWORDS_ARE_DIFFERENT\r\n})\r\n","export const SUBMIT_FORM_REQUEST = 'SUBMIT_FORM_REQUEST'\r\nexport const SUBMIT_FORM_SUCCESS = 'SUBMIT_FORM_SUCCESS'\r\nexport const SUBMIT_FORM_ERROR = 'SUBMIT_FORM_ERROR'\r\n\r\nexport const PASSWORDS_ARE_DIFFERENT = 'PASSWORDS_ARE_DIFFERENT'\r\n","import * as TYPES from './types'\r\n\r\nconst initialState = {\r\n  isFormSubmitted: false,\r\n  isLoading: false,\r\n  error: null,\r\n  arePasswordsDifferent: false\r\n}\r\n\r\nconst resetPassword = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TYPES.SUBMIT_FORM_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFormSubmitted: initialState.isFormSubmitted,\r\n        isLoading: initialState.isLoading,\r\n        error: initialState.error,\r\n        arePasswordsDifferent: initialState.arePasswordsDifferent\r\n      }\r\n    case TYPES.SUBMIT_FORM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isFormSubmitted: true\r\n      }\r\n    case TYPES.SUBMIT_FORM_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n      }\r\n    case TYPES.PASSWORDS_ARE_DIFFERENT:\r\n      return {\r\n        ...state,\r\n        arePasswordsDifferent: true\r\n      }\r\n    default:\r\n      return {...state}\r\n  }\r\n}\r\n\r\nexport default resetPassword\r\n","import * as resetPasswordOperations from './operations'\r\nimport reducer from './reducer'\r\n\r\nexport {resetPasswordOperations}\r\n\r\nexport default reducer\r\n","export const GET_ALL_BUILDINGS = 'GET_ALL_BUILDINGS'\r\nexport const GET_BUILDINGS_CATEGORIES = 'GET_BUILDINGS_CATEGORIES'\r\n","import * as TYPES from './types'\r\n\r\nconst initialState = {\r\n  buildings: [],\r\n  buildingCategories: []\r\n}\r\n\r\nfunction buildings (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TYPES.GET_ALL_BUILDINGS:\r\n      return {\r\n        ...state,\r\n        buildings: [...action.payload.buildings]\r\n      }\r\n    case TYPES.GET_BUILDINGS_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        buildingCategories: [...action.payload.buildingCategories]\r\n      }\r\n    default:\r\n      return {...state}\r\n  }\r\n}\r\n\r\nexport default buildings\r\n","import * as buildingsOperations from './operations'\r\nimport reducer from './reducer'\r\n\r\nexport {buildingsOperations}\r\n\r\nexport default reducer\r\n","import api from 'helpers/FetchData'\r\nimport * as ACTIONS from './actions'\r\n\r\nexport const getAllBusinessCategories = () => dispatch => {\r\n  api.get('/api/business-categories').then(res => {\r\n    dispatch(ACTIONS.getAllBusinessCategories(res))\r\n  })\r\n}\r\n\r\nexport const deleteBusinessCategory = (categoryId) => dispatch => {\r\n  api.deleteApi(`/api/business-categories/${categoryId}`).then(() => {\r\n    dispatch(getAllBusinessCategories())\r\n  })\r\n}\r\n\r\nexport const saveCategory = category => dispatch => {\r\n  if (category.id) {\r\n    api.put(`/api/business-categories/${category.id}`, category).then(res => {\r\n      dispatch(getAllBusinessCategories())\r\n    })\r\n  } else {\r\n    api.post(`/api/business-categories`, category).then(res => {\r\n      dispatch(getAllBusinessCategories())\r\n    })\r\n  }\r\n}\r\n","import * as TYPES from './types'\r\n\r\nexport const getAllBusinessCategories = (businessCategories) => ({\r\n  type: TYPES.GET_ALL_CATEGORIES,\r\n  payload: businessCategories\r\n})\r\n","export const GET_ALL_CATEGORIES = 'GET_ALL_CATEGORIES'\r\n","import * as TYPES from './types'\r\n\r\nconst initialState = {\r\n  allBusinessCategories: []\r\n}\r\n\r\nexport const businessCategory = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TYPES.GET_ALL_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        allBusinessCategories: action.payload\r\n      }\r\n    default:\r\n      return {...state}\r\n  }\r\n}\r\n\r\nexport default businessCategory\r\n","import * as businessCategoryOperations from './operations'\r\nimport reducer from './reducer'\r\n\r\nexport {businessCategoryOperations}\r\n\r\nexport default reducer\r\n","import api from 'helpers/FetchData'\r\nimport * as ACTIONS from './actions'\r\n\r\nexport const getAllEventCategories = () => dispatch => {\r\n  api.get('/api/event-categories').then(res => {\r\n    dispatch(ACTIONS.getAllEventCategories(res))\r\n  })\r\n}\r\n\r\nexport const deleteEventCategory = (categoryId) => dispatch => {\r\n  api.deleteApi(`/api/event-categories/${categoryId}`).then(() => {\r\n    dispatch(getAllEventCategories())\r\n  })\r\n}\r\n\r\nexport const saveCategory = category => dispatch => {\r\n  if (category.id) {\r\n    api.put(`/api/event-categories/${category.id}`, category).then(res => {\r\n      dispatch(getAllEventCategories())\r\n    })\r\n  } else {\r\n    api.post(`/api/event-categories`, category).then(res => {\r\n      dispatch(getAllEventCategories())\r\n    })\r\n  }\r\n}\r\n","import * as TYPES from './types'\r\n\r\nexport const getAllEventCategories = (eventCategories) => ({\r\n  type: TYPES.GET_ALL_CATEGORIES,\r\n  payload: eventCategories\r\n})\r\n","export const GET_ALL_CATEGORIES = 'GET_ALL_CATEGORIES'\r\n","import * as TYPES from './types'\r\n\r\nconst initialState = {\r\n  allEventCategories: []\r\n}\r\n\r\nexport const EventCategory = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TYPES.GET_ALL_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        allEventCategories: action.payload\r\n      }\r\n    default:\r\n      return {...state}\r\n  }\r\n}\r\n\r\nexport default EventCategory\r\n","import * as eventCategoryOperations from './operations'\r\nimport reducer from './reducer'\r\n\r\nexport {eventCategoryOperations}\r\n\r\nexport default reducer\r\n","export const FETCH_AVAILABLE = 'FETCH_AVAILABLE'\r\nexport const IS_LOADING = 'IS_LOADING'\r\nexport const SET_MENU_ITEMS = 'SET_MENU_ITEMS'\r\n","import * as TYPES from './types'\r\n\r\nexport const fetchAvailable = (buildings) => ({\r\n  type: TYPES.FETCH_AVAILABLE,\r\n  payload: {buildings}\r\n})\r\n\r\nexport const isLoading = (buildingCategories) => ({\r\n  type: TYPES.IS_LOADING,\r\n  payload: {buildingCategories}\r\n})\r\n\r\nexport const setMenuItems = ({updatedUserList, changedUsersList}) => ({\r\n  type: TYPES.SET_MENU_ITEMS,\r\n  payload: {updatedUserList, changedUsersList}\r\n})\r\n","import api from 'helpers/FetchData'\r\nimport * as ACTIONS from './actions'\r\n\r\nexport const fetchAvailableMenuItemNames = () => dispatch => {\r\n  dispatch(ACTIONS.isLoading(true))\r\n  api.get(`/api/places/menu-items/`)\r\n    .then(menuItems => dispatch(ACTIONS.fetchAvailable(menuItems)))\r\n    .finally(() => dispatch(ACTIONS.isLoading(false)))\r\n}\r\n","import * as TYPES from './types'\r\n\r\nconst initialState = {\r\n  availableMenuItemNames: [],\r\n  isMenuItemNamesLoading: true\r\n}\r\n\r\nfunction menuItems (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TYPES.FETCH_AVAILABLE:\r\n      return {\r\n        ...state,\r\n        availableMenuItemNames: [...action.payload]\r\n      }\r\n    case TYPES.IS_LOADING:\r\n      return {\r\n        ...state,\r\n        isMenuItemNamesLoading: action.payload\r\n      }\r\n    default:\r\n      return {...state}\r\n  }\r\n}\r\n\r\nexport default menuItems\r\n","import * as menuItemsOperations from './operations'\r\nimport * as menuItemsActions from './operations'\r\nimport reducer from './reducer'\r\n\r\nexport {menuItemsOperations, menuItemsActions}\r\n\r\nexport default reducer\r\n","import {combineReducers} from 'redux'\r\nimport {reducer as toastrReducer} from 'react-redux-toastr'\r\n\r\nimport users from './users'\r\nimport places from './places'\r\nimport forgotPassword from './forgotPassword'\r\nimport resetPassword from './resetPassword'\r\nimport buildings from './buildings'\r\nimport businessCategory from './businessCategory'\r\nimport eventCategory from './eventCategory'\r\nimport menuItems from './menuItems'\r\n\r\nconst rootReducer = combineReducers({\r\n  users: users,\r\n  places: places,\r\n  buildings: buildings,\r\n  forgotPassword: forgotPassword,\r\n  resetPassword: resetPassword,\r\n  businessCategory: businessCategory,\r\n  eventCategory: eventCategory,\r\n  menuItems: menuItems,\r\n  toastr: toastrReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import {createStore, applyMiddleware} from 'redux'\r\nimport rootReducer from './rootReducer'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","const theme = {\r\n  palette: {\r\n    common: {\r\n      black: '#000',\r\n      white: '#fff'\r\n    },\r\n    primary: {\r\n      light: '#7986cb',\r\n      main: '#3f51b5',\r\n      dark: '#303f9f',\r\n      contrastText: '#fff'\r\n    },\r\n    secondary: {\r\n      light: '#ff4081',\r\n      main: '#f50057',\r\n      dark: '#c51162',\r\n      contrastText: '#fff'\r\n    },\r\n    error: {\r\n      light: '#e57373',\r\n      main: '#f44336',\r\n      dark: '#d32f2f',\r\n      contrastText: '#fff'\r\n    }\r\n  },\r\n  typography: {}\r\n}\r\n\r\nexport default theme\r\n","import React from 'react'\r\nimport {Provider as ReduxProvider} from 'react-redux'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport {ThemeProvider} from 'styled-components'\r\n\r\nconst withRoot = ({store, theme}) => Component => (\r\n  <ReduxProvider store={store}>\r\n    <Router>\r\n      <ThemeProvider theme={theme}>\r\n        <Component/>\r\n      </ThemeProvider>\r\n    </Router>\r\n  </ReduxProvider>\r\n)\r\n\r\nexport default withRoot\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport './index.scss'\r\n\r\nconst styles = theme => ({\r\n  progress: {\r\n    margin: theme.spacing.unit * 2\r\n  }\r\n})\r\n\r\nfunction Preloader (props) {\r\n  const {classes} = props\r\n  return (\r\n    <div className='preloader'>\r\n      <CircularProgress className={classes.progress}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nPreloader.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Preloader)\r\n","export const hasGrant = (user, grant) => {\r\n  let roles = user.roles\r\n  for (let i = 0; i < roles.length; i++) {\r\n    let permissions = roles[i].permissions\r\n    for (let j = 0; j < permissions.length; j++) {\r\n      if (permissions[j].indexOf(grant) !== -1) {\r\n        return true\r\n      }\r\n    }\r\n  }\r\n  return false\r\n}","export const Grant = {\r\n  MANAGE_BUSINESS_CATEGORIES: 'MANAGE_BUSINESS_CATEGORIES',\r\n  MANGAE_USER_ROLES: 'MANGAE_USER_ROLES',\r\n  MANAGE_ROLES: 'MANAGE_ROLES',\r\n  MANAGE_PLACE_CATEGORIES: 'MANAGE_PLACE_CATEGORIES',\r\n  MANAGE_EVENT_CATEGORIES: 'MANAGE_EVENT_CATEGORIES',\r\n  MANAGE_PLACES: 'MANAGE_PLACES'\r\n}","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {withStyles} from '@material-ui/core/styles/index'\r\nimport Button from '@material-ui/core/Button'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport ImageIcon from '@material-ui/icons/Image'\r\n\r\nimport {businessCategoryOperations} from 'store/businessCategory'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n\r\n  buttons: {\r\n    textDecoration: 'none',\r\n    marginRight: '10px'\r\n  }\r\n})\r\n\r\nclass Places extends Component {\r\n  render () {\r\n    const {classes, category, deleteBusinessCategory} = this.props\r\n\r\n    return (\r\n      <ListItem>\r\n        <Avatar>\r\n          <ImageIcon/>\r\n        </Avatar>\r\n        <ListItemText primary={category.name} secondary={category.parentCategory && category.parentCategory.name}/>\r\n        <NavLink to={`/admin/business-categories/${category.id}`} className={classes.buttons}>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.button}>Edit</Button>\r\n        </NavLink>\r\n        <Button\r\n          onClick={() => deleteBusinessCategory(category.id)}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className={classes.button}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </ListItem>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({businessCategory}) => {\r\n  return {\r\n    businessCategories: businessCategory.allBusinessCategories\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteBusinessCategory: (categoryId) => dispatch(businessCategoryOperations.deleteBusinessCategory(categoryId))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Places))\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport {businessCategoryOperations} from 'store/businessCategory'\r\nimport BusinessCategoryItem from './BusinessCategoryItem'\r\n\r\nimport {NavLink} from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Preloader from '../../../../components/Preloader'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n\r\n  buttons: {\r\n    textDecoration: 'none',\r\n    marginRight: '10px',\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n\r\n  button: {\r\n    marginTop: '30px'\r\n  }\r\n})\r\n\r\nclass BusinessCategories extends Component {\r\n  componentDidMount () {\r\n    const {getAllBusinessCategories} = this.props\r\n    getAllBusinessCategories()\r\n  }\r\n\r\n  render () {\r\n    const {classes, businessCategories} = this.props\r\n\r\n    if (businessCategories.length === 0) {\r\n      return <Preloader/>\r\n    }\r\n\r\n    const businessCategoryItems = businessCategories.map((category) => {\r\n      return <BusinessCategoryItem key={category.id} category={category}/>\r\n    })\r\n    return (\r\n      <div>\r\n        <List className={classes.root}>\r\n          {businessCategoryItems}\r\n        </List>\r\n        <NavLink to={'/admin/business-categories/add-new'} className={classes.buttons}>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.button}>Add New Business Category</Button>\r\n        </NavLink>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nBusinessCategories.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = ({businessCategory}) => {\r\n  return {\r\n    businessCategories: businessCategory.allBusinessCategories\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllBusinessCategories: () => dispatch(businessCategoryOperations.getAllBusinessCategories())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(BusinessCategories))\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {businessCategoryOperations} from 'store/businessCategory'\r\nimport Preloader from '../../../../../components/Preloader'\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    width: '20%'\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  dense: {\r\n    marginTop: 16\r\n  },\r\n  menu: {\r\n    width: 200\r\n  },\r\n\r\n  buttonLink: {\r\n    marginRight: '10px',\r\n    textDecoration: 'none'\r\n  },\r\n\r\n  buttons: {\r\n    margin: '8px'\r\n  }\r\n\r\n})\r\n\r\nconst emptyCategory = {\r\n  name: '',\r\n  parentCategory: {\r\n    name: '',\r\n    parentCategory: null\r\n  }\r\n}\r\n\r\nclass BusinessCategoryForm extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      editedCategory: props.category !== undefined ? props.category : emptyCategory\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const {category, match, getAllBusinessCategories} = this.props\r\n    const creatingNewCategory = !match.params.categoryId\r\n\r\n    if (!creatingNewCategory && !category) {\r\n      getAllBusinessCategories()\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps (nextProps) {\r\n    if (nextProps.category && nextProps.category !== this.props.category) {\r\n      this.setState({editedCategory: nextProps.category})\r\n    }\r\n  }\r\n\r\n  saveCategory = () => {\r\n    const {saveCategory} = this.props\r\n\r\n    saveCategory(this.state.editedCategory)\r\n  }\r\n\r\n  handleChange = (event, propName) => {\r\n    const {categories} = this.props\r\n\r\n    const value = propName === 'parentCategory'\r\n      ? categories.find(category => category.id === event.target.value)\r\n      : event.target.value\r\n\r\n    this.setState({editedCategory: {...this.state.editedCategory, [propName]: value}})\r\n  }\r\n\r\n  render () {\r\n    const {classes, match, categories, category} = this.props\r\n    const {editedCategory} = this.state\r\n    const categoryId = match.params.categoryId\r\n\r\n    if (categoryId && !category) {\r\n      return <Preloader/>\r\n    }\r\n\r\n    const categoryOptions = categories\r\n      .filter(c => c.id.toString() !== categoryId)\r\n      .filter(c => c.parentCategory ? c.parentCategory.id.toString() !== categoryId : true)\r\n      .concat([emptyCategory])\r\n      .map(category => (\r\n        <MenuItem key={category.id} value={category.id}>\r\n          {category.name}\r\n        </MenuItem>\r\n      ))\r\n\r\n    return (\r\n      <div className={classes.container}>\r\n        <TextField\r\n          label='Business Category Name'\r\n          style={{margin: 8}}\r\n          margin='normal'\r\n          variant='outlined'\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n          value={editedCategory.name}\r\n          onChange={(e) => this.handleChange(e, 'name')}\r\n        />\r\n\r\n        <TextField\r\n          select\r\n          className={classes.textField}\r\n          value={editedCategory.parentCategory && editedCategory.parentCategory.id}\r\n          onChange={(e) => this.handleChange(e, 'parentCategory')}\r\n          SelectProps={{\r\n            MenuProps: {\r\n              className: classes.menu\r\n            }\r\n          }}\r\n          helperText='Select parent category'\r\n          margin='normal'\r\n          variant='filled'\r\n        >\r\n          {categoryOptions}\r\n        </TextField>\r\n        <div className={classes.buttons}>\r\n          <NavLink to={'/admin/business-categories'} className={classes.buttonLink}>\r\n            <Button\r\n              onClick={this.saveCategory}\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.button}\r\n            >\r\n              Save\r\n            </Button>\r\n          </NavLink>\r\n          <NavLink to={'/admin/business-categories'} className={classes.buttonLink}>\r\n            <Button variant='contained' color='secondary' className={classes.button}>\r\n              Exit\r\n            </Button>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nBusinessCategoryForm.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const category = state.businessCategory.allBusinessCategories.find(category => category.id === parseInt(props.match.params.categoryId))\r\n\r\n  return {\r\n    categories: state.businessCategory.allBusinessCategories,\r\n    category: category\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllBusinessCategories: () => dispatch(businessCategoryOperations.getAllBusinessCategories()),\r\n    saveCategory: (category) => dispatch(businessCategoryOperations.saveCategory(category))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(BusinessCategoryForm))\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {withStyles} from '@material-ui/core/styles/index'\r\nimport Button from '@material-ui/core/Button'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport ImageIcon from '@material-ui/icons/Image'\r\n\r\nimport {eventCategoryOperations} from 'store/eventCategory'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n\r\n  buttons: {\r\n    textDecoration: 'none',\r\n    marginRight: '10px'\r\n  }\r\n})\r\n\r\nclass Events extends Component {\r\n  render () {\r\n    const {classes, category, deleteEventCategory} = this.props\r\n\r\n    return (\r\n      <ListItem>\r\n        <Avatar>\r\n          <ImageIcon/>\r\n        </Avatar>\r\n        <ListItemText primary={category.name} secondary={category.parentCategory && category.parentCategory.name}/>\r\n        <NavLink to={`/admin/event-categories/${category.id}`} className={classes.buttons}>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.button}>Edit</Button>\r\n        </NavLink>\r\n        <Button\r\n          onClick={() => deleteEventCategory(category.id)}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className={classes.button}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </ListItem>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({eventCategory}) => {\r\n  return {\r\n    eventCategories: eventCategory.allEventCategories\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteEventCategory: (categoryId) => dispatch(eventCategoryOperations.deleteEventCategory(categoryId))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Events))\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport {eventCategoryOperations} from 'store/eventCategory'\r\nimport EventCategoryItem from './EventCategoryItem'\r\n\r\nimport {NavLink} from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Preloader from '../../../../components/Preloader'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n\r\n  buttons: {\r\n    textDecoration: 'none',\r\n    marginRight: '10px',\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n\r\n  button: {\r\n    marginTop: '30px'\r\n  }\r\n})\r\n\r\nclass EventCategories extends Component {\r\n  componentDidMount () {\r\n    const {getAllEventCategories} = this.props\r\n    getAllEventCategories()\r\n  }\r\n\r\n  render () {\r\n    const {classes, eventCategories} = this.props\r\n\r\n    if (eventCategories.length === 0) {\r\n      return <Preloader/>\r\n    }\r\n\r\n    const eventCategoryItems = eventCategories.map((category) => {\r\n      return <EventCategoryItem key={category.id} category={category}/>\r\n    })\r\n    return (\r\n      <div>\r\n        <List className={classes.root}>\r\n          {eventCategoryItems}\r\n        </List>\r\n        <NavLink to={'/admin/event-categories/add-new'} className={classes.buttons}>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.button}>Add New Event Category</Button>\r\n        </NavLink>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nEventCategories.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = ({eventCategory}) => {\r\n  return {\r\n    eventCategories: eventCategory.allEventCategories\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllEventCategories: () => dispatch(eventCategoryOperations.getAllEventCategories())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EventCategories))\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {eventCategoryOperations} from 'store/eventCategory'\r\nimport Preloader from '../../../../../components/Preloader'\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    width: '20%'\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  dense: {\r\n    marginTop: 16\r\n  },\r\n  menu: {\r\n    width: 200\r\n  },\r\n\r\n  buttonLink: {\r\n    marginRight: '10px',\r\n    textDecoration: 'none'\r\n  },\r\n\r\n  buttons: {\r\n    margin: '8px'\r\n  }\r\n\r\n})\r\n\r\nconst emptyCategory = {\r\n  name: '',\r\n  parentCategory: {\r\n    name: '',\r\n    parentCategory: null\r\n  }\r\n}\r\n\r\nclass EventCategoryForm extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      editedCategory: props.category !== undefined ? props.category : emptyCategory\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const {category, match, getAllEventCategories} = this.props\r\n    const creatingNewCategory = !match.params.categoryId\r\n\r\n    if (!creatingNewCategory && !category) {\r\n      getAllEventCategories()\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps (nextProps) {\r\n    if (nextProps.category && nextProps.category !== this.props.category) {\r\n      this.setState({editedCategory: nextProps.category})\r\n    }\r\n  }\r\n\r\n  saveCategory = () => {\r\n    const {saveCategory} = this.props\r\n\r\n    saveCategory(this.state.editedCategory)\r\n  }\r\n\r\n  handleChange = (event, propName) => {\r\n    const {categories} = this.props\r\n\r\n    const value = propName === 'parentCategory'\r\n      ? categories.find(category => category.id === event.target.value)\r\n      : event.target.value\r\n\r\n    this.setState({editedCategory: {...this.state.editedCategory, [propName]: value}})\r\n  }\r\n\r\n  render () {\r\n    const {classes, match, categories, category} = this.props\r\n    const {editedCategory} = this.state\r\n    const categoryId = match.params.categoryId\r\n\r\n    if (categoryId && !category) {\r\n      return <Preloader/>\r\n    }\r\n\r\n    const categoryOptions = categories\r\n      .filter(c => c.id.toString() !== categoryId)\r\n      .filter(c => c.parentCategory ? c.parentCategory.id.toString() !== categoryId : true)\r\n      .concat([emptyCategory])\r\n      .map(category => (\r\n        <MenuItem key={category.id} value={category.id}>\r\n          {category.name}\r\n        </MenuItem>\r\n      ))\r\n\r\n    return (\r\n      <div className={classes.container}>\r\n        <TextField\r\n          label='Event Category Name'\r\n          style={{margin: 8}}\r\n          margin='normal'\r\n          variant='outlined'\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n          value={editedCategory.name}\r\n          onChange={(e) => this.handleChange(e, 'name')}\r\n        />\r\n\r\n        <TextField\r\n          select\r\n          className={classes.textField}\r\n          value={editedCategory.parentCategory && editedCategory.parentCategory.id}\r\n          onChange={(e) => this.handleChange(e, 'parentCategory')}\r\n          SelectProps={{\r\n            MenuProps: {\r\n              className: classes.menu\r\n            }\r\n          }}\r\n          helperText='Select parent category'\r\n          margin='normal'\r\n          variant='filled'\r\n        >\r\n          {categoryOptions}\r\n        </TextField>\r\n        <div className={classes.buttons}>\r\n          <NavLink to={'/admin/event-categories'} className={classes.buttonLink}>\r\n            <Button\r\n              onClick={this.saveCategory}\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.button}\r\n            >\r\n              Save\r\n            </Button>\r\n          </NavLink>\r\n          <NavLink to={'/admin/event-categories'} className={classes.buttonLink}>\r\n            <Button variant='contained' color='secondary' className={classes.button}>\r\n              Exit\r\n            </Button>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nEventCategoryForm.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  const category = state.eventCategory.allEventCategories.find(category => category.id === parseInt(props.match.params.categoryId))\r\n\r\n  return {\r\n    categories: state.eventCategory.allEventCategories,\r\n    category: category\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllEventCategories: () => dispatch(eventCategoryOperations.getAllEventCategories()),\r\n    saveCategory: (category) => dispatch(eventCategoryOperations.saveCategory(category))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(EventCategoryForm))\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\nimport {usersOperations} from 'store/users'\r\n\r\nconst styles = {\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 400\r\n  },\r\n  input: {\r\n    marginLeft: 8,\r\n    flex: 1\r\n  },\r\n  iconButton: {\r\n    padding: 10\r\n  },\r\n  divider: {\r\n    width: 1,\r\n    height: 28,\r\n    margin: 4\r\n  }\r\n}\r\n\r\nclass UserEmailSearchBar extends React.Component {\r\n  state = {\r\n    email: ''\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({email: event.target.value})\r\n  }\r\n\r\n  findUsersByEmail = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.props.getUsersByEmail(this.state.email, 0, 25)\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {classes} = this.props\r\n    return (\r\n      <Paper className={classes.root} elevation={1}>\r\n        <InputBase\r\n          onKeyPress={this.findUsersByEmail}\r\n          value={this.state.email}\r\n          onChange={this.handleChange}\r\n          className={classes.input}\r\n          placeholder=\"Search User By email\"\r\n        />\r\n        <IconButton className={classes.iconButton} aria-label=\"Search\">\r\n          <SearchIcon/>\r\n        </IconButton>\r\n      </Paper>\r\n    )\r\n  }\r\n}\r\n\r\nUserEmailSearchBar.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    usersListByEmail: state.users.usersListByEmail\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getUsersByEmail: (email, page, size) => dispatch(usersOperations.getUsersByEmail(email, page, size))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(UserEmailSearchBar))\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport Chip from '@material-ui/core/Chip'\r\n\r\nimport {usersActions} from 'store/users'\r\nimport './userItem.scss'\r\n\r\nconst styles = theme => ({\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120,\r\n    maxWidth: 200\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  chip: {\r\n    margin: theme.spacing.unit / 4\r\n  }\r\n})\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n}\r\n\r\nfunction getStyles (name, that) {\r\n  return {\r\n    fontWeight:\r\n      that.props.user.roles.indexOf(name) === -1\r\n        ? that.props.theme.typography.fontWeightRegular\r\n        : that.props.theme.typography.fontWeightMedium\r\n  }\r\n}\r\n\r\nclass UserItem extends React.Component {\r\n  handleChange = event => {\r\n    const {user, usersListByEmail, changedUsersList, updateUsersList} = this.props\r\n    updateUsersList(user, event.target.value, usersListByEmail, changedUsersList)\r\n  }\r\n\r\n  render () {\r\n    const {classes, user, userRoles} = this.props\r\n    const roles = userRoles.filter(role => user.roles.some(userRole => role.id === userRole.id))\r\n\r\n    return (\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"select-multiple-chip\">Select Roles</InputLabel>\r\n        <Select\r\n          multiple\r\n          value={roles}\r\n          onChange={this.handleChange}\r\n          input={<Input id=\"select-multiple-chip\"/>}\r\n          renderValue={selected => (\r\n            <div className={classes.chips}>\r\n              {selected.map(value => (\r\n                <Chip key={value.id} label={value.name} className={classes.chip}/>\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {userRoles.map(role => (\r\n            <MenuItem key={role.id} value={role} style={getStyles(role, this)}>\r\n              {role.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    )\r\n  }\r\n}\r\n\r\nUserItem.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    usersListByEmail: state.users.usersListByEmail,\r\n    userRoles: state.users.userRoles,\r\n    changedUsersList: state.users.changedUsersList\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateUsersList: (user, selectedRoles, userList, chengedUsers) => {\r\n      user.roles = [...selectedRoles]\r\n      let updatedUserList = userList.map((item) => {\r\n        if (item.id === user.id) {\r\n          return user\r\n        }\r\n        return item\r\n      })\r\n\r\n      let isContain = false\r\n\r\n      for (let i = 0; i < chengedUsers.length; i++) {\r\n        if (chengedUsers[i].id === user.id) {\r\n          chengedUsers[i] = user\r\n          isContain = true\r\n        }\r\n      }\r\n\r\n      if (!isContain) {\r\n        chengedUsers.push(user)\r\n      }\r\n\r\n      const changedUsersList = chengedUsers\r\n\r\n      dispatch(usersActions.setUserRoles({updatedUserList, changedUsersList}))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, {withTheme: true})(UserItem))\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport ImageIcon from '@material-ui/icons/Image'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nimport {usersOperations, usersActions} from 'store/users'\r\n\r\nimport UserItem from './UserItem/index'\r\n\r\nimport './userList.scss'\r\n\r\nconst rows = [\r\n  {id: 'photo', numeric: false, disablePadding: false, label: 'Photo'},\r\n  {id: 'email', numeric: true, disablePadding: false, label: 'Email'},\r\n  {id: 'name', numeric: true, disablePadding: false, label: 'Name'},\r\n  {id: 'age', numeric: true, disablePadding: false, label: 'Age'},\r\n  {id: 'roles', numeric: true, disablePadding: false, label: 'Roles'}\r\n]\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  render () {\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {rows.map(\r\n            row => (\r\n              <TableCell\r\n                key={row.id}\r\n                align={row.id === 'roles' ? 'right' : 'left'}\r\n                padding='none'\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel>\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            ),\r\n            this\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3\r\n  },\r\n  table: {\r\n    tableLayout: 'fixed'\r\n  },\r\n  tableWrapper: {\r\n    padding: '0 20px',\r\n    overflowX: 'auto'\r\n  },\r\n  roles: {\r\n    maxWidth: '100px'\r\n  },\r\n  buttons: {\r\n    textDecoration: 'none',\r\n    margin: '10px'\r\n  },\r\n  userListButtons: {\r\n    marginTop: '20px',\r\n    textAlign: 'center'\r\n  },\r\n  tableCell: {}\r\n})\r\n\r\nclass UsersList extends React.Component {\r\n  state = {\r\n    order: 'asc',\r\n    orderBy: 'calories',\r\n    page: 0,\r\n    rowsPerPage: 25\r\n  }\r\n\r\n  componentDidMount () {\r\n    const {page, rowsPerPage} = this.state\r\n    this.props.getAllUsers('', page, rowsPerPage)\r\n  }\r\n\r\n  saveUsersRoles = () => {\r\n    const {changedUsersList, saveUserRoles} = this.props\r\n    changedUsersList.forEach((user) => {\r\n      let roles = user.roles\r\n      saveUserRoles(user.id, roles)\r\n    })\r\n    this.props.updateUsersList()\r\n  }\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.props.updatePaginationPage(page)\r\n    this.props.getAllUsers(this.props.email, page, this.state.rowsPerPage)\r\n  }\r\n\r\n  render () {\r\n    const {classes, usersListByEmail, totalElements, page} = this.props\r\n    const {rowsPerPage} = this.state\r\n    return (\r\n      <div className={classes.root}>\r\n        <Paper className={classes.root}>\r\n          <div className={classes.tableWrapper}>\r\n            <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n              <EnhancedTableHead\r\n                rowCount={usersListByEmail.length}\r\n              />\r\n              <TableBody>\r\n                {usersListByEmail.map(user => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={user.id}\r\n                    >\r\n                      <TableCell className={classes.tableCell} component=\"th\" scope=\"row\" padding=\"none\">\r\n                        <Avatar>\r\n                          <ImageIcon/>\r\n                        </Avatar>\r\n                      </TableCell>\r\n                      <TableCell\r\n                        padding=\"none\"\r\n                        align=\"left\"\r\n                        className='text-overflow-ellipsis'\r\n                        title={user.email}\r\n                      >\r\n                        {user.email}\r\n                      </TableCell>\r\n                      <TableCell padding=\"none\" align=\"left\">{user.firstName}</TableCell>\r\n                      <TableCell padding=\"none\" align=\"left\">{user.age}</TableCell>\r\n                      <TableCell padding=\"none\" align=\"right\" className={classes.roles}>\r\n                        <UserItem user={user} key={user.id}/>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n          <TablePagination\r\n            rowsPerPageOptions={[25]}\r\n            labelRowsPerPage=''\r\n            component=\"div\"\r\n            count={totalElements}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            backIconButtonProps={{\r\n              'aria-label': 'Previous Page'\r\n            }}\r\n            nextIconButtonProps={{\r\n              'aria-label': 'Next Page'\r\n            }}\r\n            onChangePage={this.handleChangePage}\r\n\r\n          />\r\n        </Paper>\r\n        <div className={classes.userListButtons}>\r\n          <NavLink className={classes.buttons} to={'/admin'}><Button onClick={this.saveUsersRoles} variant=\"contained\"\r\n                                                                     color=\"primary\" className={classes.button}>\r\n            Save\r\n          </Button>\r\n          </NavLink>\r\n          <NavLink className={classes.buttons} to={'/admin'}>\r\n            <Button onClick={() => this.props.updateUsersList()} variant=\"contained\" color=\"secondary\"\r\n                    className={classes.button}>\r\n              Exit\r\n            </Button>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nUsersList.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    usersListByEmail: state.users.usersListByEmail,\r\n    changedUsersList: state.users.changedUsersList,\r\n    userRoles: state.users.userRoles,\r\n    page: state.users.page,\r\n    totalElements: state.users.totalElements,\r\n    email: state.users.email\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateUsersList: () => dispatch(usersActions.setUserRoles({updatedUserList: [], changedUsersList: []})),\r\n    saveUserRoles: (userId, roles) => dispatch(usersOperations.saveUserRoles(userId, roles)),\r\n    getAllUsers: (email, page, size) => dispatch(usersOperations.getUsersByEmail(email, page, size)),\r\n    updatePaginationPage: (page) => dispatch(usersActions.changePaginationPage(page))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(UsersList))\r\n","import React, {Component} from 'react'\r\nimport SearchBar from './Searchbar'\r\nimport UsersList from './UsersList'\r\n\r\nclass ManagingUsersRoles extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <SearchBar/>\r\n        <UsersList/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ManagingUsersRoles\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {withStyles} from '@material-ui/core/styles/index'\r\nimport Button from '@material-ui/core/Button'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport ImageIcon from '@material-ui/icons/Image'\r\n\r\nimport {placesOperations} from 'store/places'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n\r\n  buttons: {\r\n    textDecoration: 'none',\r\n    marginRight: '10px'\r\n  }\r\n})\r\n\r\nclass Places extends Component {\r\n  render () {\r\n    const {classes, place, deletePlace} = this.props\r\n    return (\r\n      <ListItem>\r\n        <Avatar>\r\n          <ImageIcon/>\r\n        </Avatar>\r\n        <ListItemText primary={place.title} secondary={place.address}/>\r\n        <NavLink to={`/admin/places/${place.id}`} className={classes.buttons}>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.button}>Edit</Button>\r\n        </NavLink>\r\n        <Button\r\n          onClick={() => deletePlace(place.id)}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className={classes.button}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </ListItem>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    placeList: state.places.places\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deletePlace: (placeId) => dispatch(placesOperations.deletePlace(placeId)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Places))\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport {placesOperations} from 'store/places'\r\nimport PlaceItem from './PLaceItem'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n\r\n  buttons: {\r\n    textDecoration: 'none',\r\n    marginRight: '10px'\r\n  }\r\n})\r\n\r\nclass Places extends Component {\r\n  componentDidMount () {\r\n    const {getAllPlaces} = this.props\r\n    getAllPlaces()\r\n  }\r\n\r\n  render () {\r\n    const {classes, places} = this.props\r\n    const placeList = places.map((place) => {\r\n      return <PlaceItem key={place.id} place={place}/>\r\n    })\r\n    return (\r\n      <div className=\"placeList\">\r\n        <List className={classes.root}>\r\n          {placeList}\r\n        </List>\r\n        <NavLink to={'/admin/places/add-new'} className={classes.buttons}>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.button}>Add New PLace</Button>\r\n        </NavLink>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPlaces.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    places: [...state.places.places]\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllPlaces: () => dispatch(placesOperations.getPlaces())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Places))\r\n","/* eslint-disable no-undef */\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nimport {placesOperations} from 'store/places'\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  dense: {\r\n    marginTop: 16\r\n  },\r\n  menu: {\r\n    width: 200\r\n  },\r\n\r\n  buttonLink: {\r\n    textDecoration: 'none'\r\n  }\r\n\r\n})\r\n\r\nconst emptyPLace = {\r\n  title: '',\r\n  description: '',\r\n  address: '',\r\n  placeCategory: {}\r\n}\r\n\r\nclass PlaceForm extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      place: typeof props.place !== 'undefined' ? props.place : emptyPLace\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const {getPlaceCategories} = this.props\r\n    getPlaceCategories()\r\n  }\r\n\r\n  savePlace = (placeId, place) => {\r\n    if (placeId) {\r\n      this.props.updatePlace(placeId, place)\r\n    } else {\r\n      this.props.saveNewPlace(place)\r\n    }\r\n  }\r\n\r\n  handleChange = name => event => {\r\n    let value\r\n    if (name === 'placeCategory') {\r\n      value = this.props.categories.find(category => {\r\n        return category.id === event.target.value\r\n      })\r\n    } else {\r\n      value = event.target.value\r\n    }\r\n    this.setState({\r\n      place: {...this.state.place, [name]: value}\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const {classes, categories, placeId} = this.props\r\n    const {place} = this.state\r\n\r\n    return (\r\n      <div className=\"edit-place-form\">\r\n        <form className={classes.container} noValidate autoComplete=\"off\">\r\n          <TextField\r\n            label=\"Title\"\r\n            style={{margin: 8}}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            value={place.title}\r\n            onChange={this.handleChange('title')}\r\n          />\r\n\r\n          <TextField\r\n            id=\"outlined-required\"\r\n            label=\"Description\"\r\n            style={{margin: 8}}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            value={place.description}\r\n            onChange={this.handleChange('description')}\r\n          />\r\n\r\n          <TextField\r\n            id=\"outlined-required\"\r\n            label=\"Address\"\r\n            style={{margin: 8}}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            value={place.address}\r\n            onChange={this.handleChange('address')}\r\n          />\r\n\r\n          <TextField\r\n            disabled\r\n            id=\"outlined-disabled\"\r\n            label=\"Photo\"\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n          />\r\n\r\n          <TextField\r\n            id=\"outlined-select-currency\"\r\n            select\r\n            className={classes.textField}\r\n            value={place.placeCategory.id}\r\n            onChange={this.handleChange('placeCategory')}\r\n            SelectProps={{\r\n              MenuProps: {\r\n                className: classes.menu\r\n              }\r\n            }}\r\n            helperText=\"select place category\"\r\n            margin=\"normal\"\r\n            variant=\"filled\"\r\n          >\r\n            {categories.map(category => (\r\n              <MenuItem key={category.id} value={category.id}>\r\n                {category.name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </form>\r\n        <div className=\"place-buttons\">\r\n          <NavLink to={'/admin/places'} className={classes.buttonLink}>\r\n            <Button onClick={() => this.savePlace(placeId, place)} variant=\"contained\" color=\"primary\"\r\n                    className={classes.button}>\r\n              Save\r\n            </Button>\r\n          </NavLink>\r\n          <NavLink to={'/admin/places'} className={classes.buttonLink}>\r\n            <Button variant=\"contained\" color=\"secondary\" className={classes.button}>\r\n              Exit\r\n            </Button>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPlaceForm.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    categories: [...state.places.placeCategories],\r\n    placeList: [...state.places.places],\r\n    place: state.places.places.find(place => place.id === +props.match.params.placeId)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    saveNewPlace: (place) => dispatch(placesOperations.saveNewPlace(place)),\r\n    getPlaceCategories: () => dispatch(placesOperations.getPlacesCategories()),\r\n    updatePlace: (placeId, place) => dispatch(placesOperations.updatePlace(placeId, place))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(PlaceForm))\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport Chip from '@material-ui/core/Chip'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120,\r\n    maxWidth: 300\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  chip: {\r\n    margin: theme.spacing.unit / 4\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing.unit * 3\r\n  }\r\n})\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n}\r\n\r\nfunction getStyles (name, that) {\r\n  return {\r\n    fontWeight:\r\n      that.state.name.indexOf(name) === -1\r\n        ? that.props.theme.typography.fontWeightRegular\r\n        : that.props.theme.typography.fontWeightMedium\r\n  }\r\n}\r\n\r\nclass MultipleSelect extends React.Component {\r\n  state = {\r\n    name: []\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({name: event.target.value})\r\n  }\r\n\r\n  handleChangeMultiple = event => {\r\n    const {options} = event.target\r\n    const value = []\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value)\r\n      }\r\n    }\r\n    this.setState({\r\n      name: value\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const {classes, names} = this.props\r\n    return (\r\n      <div className={classes.root}>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel htmlFor=\"select-multiple-chip\">MenuItem</InputLabel>\r\n          <Select\r\n            multiple\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            input={<Input id=\"select-multiple-chip\"/>}\r\n            renderValue={selected => (\r\n              <div className={classes.chips}>\r\n                {selected.map(value => (\r\n                  <Chip key={value} label={value} className={classes.chip}/>\r\n                ))}\r\n              </div>\r\n            )}\r\n            MenuProps={MenuProps}\r\n          >\r\n            {names.map(name => (\r\n              <MenuItem key={name} value={name} style={getStyles(name, this)}>\r\n                {name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nMultipleSelect.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(MultipleSelect)\r\n","import ReactDOM from 'react-dom'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport store from './store'\r\nimport theme from './ui/theme'\r\n\r\nimport RootProviders from './RootProviders'\r\nimport App from './App'\r\n\r\nimport './index.scss'\r\n\r\nconst rootDecorator = RootProviders({\r\n  store,\r\n  theme\r\n})\r\n\r\nconst root = document.getElementById('root')\r\n\r\nconst render = Component => {\r\n  ReactDOM.render(rootDecorator(Component), root)\r\n}\r\n\r\nrender(App)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","import Button from '@material-ui/core/Button'\r\nimport {connect} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport ImageIcon from '@material-ui/icons/Image'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nimport {menuItemsActions} from 'store/menuItems'\r\n\r\nconst rows = [\r\n  {id: 'placeCategory', numeric: false, disablePadding: false, label: 'Place Category'},\r\n  {id: 'menuItems', numeric: true, disablePadding: false, label: 'Menu Items'}\r\n]\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  render () {\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {rows.map(\r\n            row => (\r\n              <TableCell\r\n                key={row.id}\r\n                align={row.id === 'roles' ? 'right' : 'left'}\r\n                padding='none'\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel>\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            ),\r\n            this\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3\r\n  },\r\n  table: {\r\n    tableLayout: 'fixed'\r\n  },\r\n  tableWrapper: {\r\n    padding: '0 20px',\r\n    overflowX: 'auto'\r\n  },\r\n  roles: {\r\n    maxWidth: '100px'\r\n  },\r\n  buttons: {\r\n    textDecoration: 'none',\r\n    margin: '10px'\r\n  },\r\n  userListButtons: {\r\n    marginTop: '20px',\r\n    textAlign: 'center'\r\n  },\r\n  tableCell: {}\r\n})\r\n\r\nclass PlaceCategories extends React.Component {\r\n  state = {\r\n    order: 'asc',\r\n    orderBy: 'calories',\r\n    page: 0,\r\n    rowsPerPage: 25\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.props.getAllCategories() // ToDo: implement getAllCategories\r\n  }\r\n\r\n  savePlaceCategories = () => {\r\n    const {changedPlaceCategories, savePlaceCategories} = this.props // TODO: implement savePlaceCategories\r\n    changedPlaceCategories.forEach(category => savePlaceCategories(category.id, category.menuItems))\r\n    this.props.resetListChanges() // TODO: implement resetListChanges\r\n  }\r\n\r\n  handleChangePage = () => this.props.getAllCategories()\r\n\r\n  render () {\r\n    const {classes, placeCategoriesList} = this.props\r\n    return (\r\n      <div className={classes.root}>\r\n        <Paper className={classes.root}>\r\n          <div className={classes.tableWrapper}>\r\n            <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n              <EnhancedTableHead\r\n                rowCount={placeCategoriesList.length}\r\n              />\r\n              <TableBody>\r\n                {placeCategoriesList.map(category => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={category.id}\r\n                    >\r\n                      <TableCell className={classes.tableCell} component=\"th\" scope=\"row\" padding=\"none\">\r\n                        <Avatar>\r\n                          <ImageIcon/>\r\n                        </Avatar>\r\n                      </TableCell>\r\n                      <TableCell padding=\"none\" align=\"left\">{category.placeCategory}</TableCell>\r\n                      <TableCell padding=\"none\" align=\"left\">{category.menuItems}</TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </Paper>\r\n        <div className={classes.userListButtons}>\r\n          <NavLink className={classes.buttons} to={'/admin'}>\r\n            <Button\r\n              onClick={this.savePlaceCategories}\r\n              variant=\"contained\" color=\"primary\"\r\n              className={classes.button}\r\n            >\r\n              Save\r\n            </Button>\r\n          </NavLink>\r\n          <NavLink className={classes.buttons} to={'/admin'}>\r\n            <Button\r\n              onClick={() => this.props.resetListChanges()}\r\n              variant=\"contained\" color=\"secondary\"\r\n              className={classes.button}\r\n            >\r\n              Exit\r\n            </Button>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPlaceCategories.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    placeCategoriesList: store.placeCategories.placeCategoriesList,\r\n    changedPlaceCategories: store.placeCategories.changedPlaceCategories,\r\n    menuItems: store.placeCategories.menuItems\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    resetListChanges: () => {\r\n      dispatch(menuItemsActions.setMenuItems({updatedUserList: [], changedUsersList: []}))\r\n    },\r\n    saveUserRoles: (id, menuItems) => {\r\n    }, // dispatch(savePlaceCategories(id, menuItems)),\r\n    getAllCategories: () => {\r\n    }// dispatch(getAllCategories())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(PlaceCategories))\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst styles = () => ({\r\n  button: {\r\n    marginTop: 12,\r\n    marginLeft: 26,\r\n    width: 142,\r\n    height: 56\r\n  }\r\n})\r\n\r\nconst SubmitButton = props => {\r\n  const {classes} = props\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"primary\" className={classes.button} type=\"submit\" fullWidth>\r\n        SAVE\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nSubmitButton.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(SubmitButton)\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router'\r\nimport {menuItemsOperations} from 'store/menuItems'\r\nimport MultipleSelect from './MenuItemMultipleSelect'\r\nimport PlaceCategories from './PlaceCategories'\r\nimport './index.scss'\r\nimport SubmitButton from './SubmitButton'\r\nimport Preloader from '../../../../components/Preloader'\r\n\r\nclass ScreenMenuItems extends Component {\r\n  componentDidMount () {\r\n    this.props.fetchAvailableMenuItemNames()\r\n  }\r\n\r\n  render () {\r\n    const {availableMenuItemNames, isMenuItemNamesLoading} = this.props\r\n    if (this.props.isMenuItemNamesLoading) {\r\n      return (\r\n        <div className='wrapper'>\r\n          <Preloader/>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className='ScreenMenuWrapper'>\r\n        <PlaceCategories/>\r\n        <MultipleSelect isMenuItemNamesLoading={isMenuItemNamesLoading} names={availableMenuItemNames}/>\r\n        <SubmitButton/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({menuItems}) => {\r\n  return {\r\n    availableMenuItemNames: menuItems.availableMenuItemNames,\r\n    isMenuItemNamesLoading: menuItems.isMenuItemNamesLoading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchAvailableMenuItemNames: () => dispatch(menuItemsOperations.fetchAvailableMenuItemNames())\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ScreenMenuItems))\r\n","import React, {Component} from 'react'\r\nimport {Redirect, Route, Switch, withRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {hasGrant} from 'utils/roles'\r\nimport {Grant} from 'constants/permissions'\r\n\r\nimport ManageBusinessCategories from './components/ManageBusinessCategory'\r\nimport BusinessCategoryForm from './components/ManageBusinessCategory/BusinessCategoryForm'\r\nimport ManageEventCategories from './components/ManageEventCategory'\r\nimport EventCategoryForm from './components/ManageEventCategory/EventCategoryForm'\r\nimport ManagingUserRoles from './components/ManagingUserRoles'\r\nimport Places from './components/Places'\r\nimport PlaceForm from './components/Places/PLaceForm'\r\nimport PlaceCategories from './components/PlaceCategories'\r\n\r\nclass AdminRouter extends Component {\r\n  render () {\r\n    const {user} = this.props\r\n\r\n    return (\r\n      <Switch>\r\n        <AuthorizedRoute authorized={hasGrant(user, Grant.MANGAE_USER_ROLES)} path=\"/admin/managing-roles\" component={ManagingUserRoles}/>\r\n        <AuthorizedRoute authorized={hasGrant(user, Grant.MANGAE_USER_ROLES)} path=\"/admin/place-categories\" component={PlaceCategories}/>\r\n        <AuthorizedRoute authorized={hasGrant(user, Grant.MANAGE_PLACES)} path=\"/admin/places/add-new\" component={PlaceForm}/>\r\n        <AuthorizedRoute authorized={hasGrant(user, Grant.MANAGE_PLACES)} path=\"/admin/places/:placeId\" component={PlaceForm}/>\r\n        <AuthorizedRoute authorized={hasGrant(user, Grant.MANAGE_PLACES)} path=\"/admin/places\" component={Places}/>\r\n        <AuthorizedRoute authorized={hasGrant(user, Grant.MANAGE_BUSINESS_CATEGORIES)} path=\"/admin/business-categories/add-new\" component={BusinessCategoryForm}/>\r\n        <AuthorizedRoute authorized={hasGrant(user, Grant.MANAGE_BUSINESS_CATEGORIES)} path=\"/admin/business-categories/:categoryId\" component={BusinessCategoryForm}/>\r\n        <AuthorizedRoute authorized={hasGrant(user, Grant.MANAGE_BUSINESS_CATEGORIES)} path=\"/admin/business-categories\" component={ManageBusinessCategories}/>\r\n        <AuthorizedRoute authorized={hasGrant(user, Grant.MANAGE_EVENT_CATEGORIES)} path=\"/admin/event-categories/add-new\" component={EventCategoryForm}/>\r\n        <AuthorizedRoute authorized={hasGrant(user, Grant.MANAGE_EVENT_CATEGORIES)} path=\"/admin/event-categories/:categoryId\" component={EventCategoryForm}/>\r\n        <AuthorizedRoute authorized={hasGrant(user, Grant.MANAGE_EVENT_CATEGORIES)} path=\"/admin/event-categories\" component={ManageEventCategories}/>\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n\r\nexport const AuthorizedRoute = ({component: Component, authenticated, authorized, ...rest}) => (\r\n  <Route {...rest} render={(props) => authorized\r\n    ? <Route component={Component} {...props}/>\r\n    : <Redirect to='/login'/>}/>\r\n)\r\n\r\nconst mapStateToProps = ({users}) => {\r\n  return {\r\n    user: users.currentUser\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(AdminRouter))\r\n","import React, {Component} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport DashboardIcon from '@material-ui/icons/Dashboard'\r\nimport EventIcon from '@material-ui/icons/Event'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\nimport PeopleIcon from '@material-ui/icons/People'\r\nimport {hasGrant} from '../../utils/roles'\r\nimport {Grant} from '../../constants/permissions'\r\nimport {connect} from 'react-redux'\r\nimport LayersIcon from '@material-ui/icons/Layers'\r\nimport './sidebar-menu.scss'\r\n\r\nclass SidebarMenu extends Component {\r\n  render () {\r\n    const {user} = this.props\r\n    return (\r\n      <div>\r\n        {\r\n          hasGrant(user, Grant.MANAGE_BUSINESS_CATEGORIES) &&\r\n          <NavLink to={'/admin/business-categories'} className=\"sidebarItem\">\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <DashboardIcon/>\r\n              </ListItemIcon>\r\n              <ListItemText primary={'Business Categories'}/>\r\n            </ListItem>\r\n          </NavLink>\r\n        }\r\n        {\r\n          hasGrant(user, Grant.MANGAE_USER_ROLES) &&\r\n          <NavLink to={'/admin/managing-roles'} className=\"sidebarItem\">\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <ShoppingCartIcon/>\r\n              </ListItemIcon>\r\n              <ListItemText primary={'Managing Roles'}/>\r\n            </ListItem>\r\n          </NavLink>\r\n        }\r\n\r\n        {\r\n          hasGrant(user, Grant.MANAGE_PLACES) &&\r\n          <NavLink to={'/admin/places'} className=\"sidebarItem\">\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <PeopleIcon/>\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Places\"/>\r\n            </ListItem>\r\n          </NavLink>\r\n        }\r\n\r\n        {\r\n          hasGrant(user, Grant.MANAGE_BUSINESS_CATEGORIES) &&\r\n          <NavLink to={'/admin/place-categories'} className=\"sidebarItem\">\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <LayersIcon/>\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"PlaceCategories\"/>\r\n            </ListItem>\r\n          </NavLink>\r\n        }\r\n\r\n        {\r\n          hasGrant(user, Grant.MANAGE_EVENT_CATEGORIES) &&\r\n          <NavLink to={'/admin/event-categories'} className=\"sidebarItem\">\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <EventIcon/>\r\n              </ListItemIcon>\r\n              <ListItemText primary={'Event Categories'}/>\r\n            </ListItem>\r\n          </NavLink>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({users}) => {\r\n  return {\r\n    user: users.currentUser\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SidebarMenu)\r\n","import React from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\nimport PowerSetting from '@material-ui/icons/PowerSettingsNew'\r\n\r\nimport AdminRouter from './routes'\r\n\r\nimport Sidebarmenu from '../../components/SidebarMenu'\r\nimport {usersOperations} from 'store/users'\r\n\r\nconst drawerWidth = 240\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24 // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none'\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    width: theme.spacing.unit * 7,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing.unit * 9\r\n    }\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n    height: '100vh',\r\n    overflow: 'auto'\r\n  },\r\n  chartContainer: {\r\n    marginLeft: -22\r\n  },\r\n  tableContainer: {\r\n    height: 320\r\n  },\r\n  h5: {\r\n    marginBottom: theme.spacing.unit * 2\r\n  }\r\n})\r\n\r\nclass Admin extends React.Component {\r\n  state = {\r\n    open: true\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.props.getUserRolesList()\r\n  }\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({open: true})\r\n  }\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({open: false})\r\n  }\r\n\r\n  render () {\r\n    const {classes, logoutUser} = this.props\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline/>\r\n        <AppBar\r\n          position=\"absolute\"\r\n          className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\r\n        >\r\n          <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              className={classNames(\r\n                classes.menuButton,\r\n                this.state.open && classes.menuButtonHidden\r\n              )}\r\n            >\r\n              <MenuIcon/>\r\n            </IconButton>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              noWrap\r\n              className={classes.title}\r\n            >\r\n              Dashboard\r\n            </Typography>\r\n            <IconButton color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <NotificationsIcon/>\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton onClick={logoutUser} color=\"inherit\" alt=\"Log out\">\r\n              <PowerSetting/>\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose)\r\n          }}\r\n          open={this.state.open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              <ChevronLeftIcon/>\r\n            </IconButton>\r\n          </div>\r\n          <Divider/>\r\n          <Sidebarmenu/>\r\n          <Divider/>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer}/>\r\n          <AdminRouter/>\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nAdmin.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userRoles: state.users.userRoles\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logoutUser: () => dispatch(usersOperations.logOutUser()),\r\n  getUserRolesList: () => dispatch(usersOperations.getUserRoles())\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(((withStyles(styles, {withTheme: true})(Admin)))))\r\n","import React, {Component} from 'react'\nimport {NavLink, Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nimport {usersOperations} from 'store/users'\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\n      .spacing.unit * 3}px`\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3\n  },\n  wrapper: {\n    height: '100vh',\n    width: '100vw'\n  },\n  socialWrapper: {\n    width: '100%',\n    margin: '20px 0',\n    display: 'flex',\n    justifyContent: 'space-around'\n  },\n  googleButton: {\n    width: '45%'\n  }\n\n})\n\nclass Login extends Component {\n  render () {\n    const {classes, currentUser} = this.props\n\n    if (currentUser) {\n      return <Redirect to={'/'}/>\n    }\n\n    return (\n      <main className={classes.main}>\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon/>\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in with\n          </Typography>\n          <div className={classes.socialWrapper}>\n            <Button\n              onClick={() => this.props.loginWithOAuth('google')}\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.googleButton}\n            >\n              Google\n            </Button>\n            <Button\n              onClick={() => this.props.loginWithOAuth('facebook')}\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.googleButton}\n            >\n              Facebook\n            </Button>\n          </div>\n\n          <Typography component=\"h1\" variant=\"h5\">\n            Or\n          </Typography>\n\n          <form className={classes.form} onSubmit={this.props.submitLoginForm}>\n            <FormControl margin=\"normal\" required fullWidth>\n              <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n              <Input\n                id=\"email\"\n                name=\"username\"\n                autoComplete=\"email\"\n                autoFocus\n              />\n            </FormControl>\n            <FormControl margin=\"normal\" required fullWidth>\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\n              <Input\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </FormControl>\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\"/>}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign in\n            </Button>\n            <Button\n              component={NavLink}\n              to={'/forgot-password'}\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.submit}\n            >\n              Forgot Password\n            </Button>\n          </form>\n        </Paper>\n      </main>\n    )\n  }\n}\n\nconst mapStateToProps = ({users}) => ({\n  currentUser: users.currentUser,\n  isCurrentUserLoading: users.isCurrentUserLoading\n})\n\nconst mapDispatchToProps = dispatch => ({\n  submitLoginForm: event => dispatch(usersOperations.submitLoginForm(event)),\n  loginWithOAuth: event => dispatch(usersOperations.loginWithOAuth(event))\n})\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Login))\n\n","import React, {Component} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\n\r\nimport Preloader from '../../../components/Preloader'\r\nimport {forgotPasswordOperations} from 'store/forgotPassword'\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    width: 'auto',\r\n    display: 'block', // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto'\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing.unit\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3\r\n  },\r\n  email: {\r\n    display: 'block',\r\n    fontSize: '12px'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    textAlign: 'center'\r\n  }\r\n})\r\n\r\nclass ForgotPassword extends Component {\r\n  render () {\r\n    const {classes, isFormSubmitted, isLoading} = this.props\r\n\r\n    const forgotPasswordForm = (\r\n      <div className={classes.wrapper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Forgot Password\r\n          <span className={classes.email}>enter your email and we send there your password</span>\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          onSubmit={this.props.submitForgotPasswordForm}>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\r\n            <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus/>\r\n          </FormControl>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}>\r\n            Reset Password\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    )\r\n\r\n    const afterSubmitContent = (\r\n      <div className={classes.wrapper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Password recovery\r\n          <span className={classes.email}>Link to reset password was sent to your email</span>\r\n        </Typography>\r\n        <Button\r\n          component={NavLink}\r\n          to={'login'}\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          Back to Login\r\n        </Button>\r\n      </div>\r\n    )\r\n\r\n    return (\r\n      <main className={classes.main}>\r\n        <Paper className={classes.paper}>\r\n          {isLoading && <Preloader/>}\r\n          {!isLoading && !isFormSubmitted && forgotPasswordForm}\r\n          {isFormSubmitted && afterSubmitContent}\r\n        </Paper>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({forgotPassword}) => {\r\n  return {\r\n    isFormSubmitted: forgotPassword.isFormSubmitted,\r\n    isLoading: forgotPassword.isLoading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  submitForgotPasswordForm: (event) => dispatch(forgotPasswordOperations.submitForgotPasswordForm(event))\r\n})\r\n\r\nForgotPassword.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)((withStyles(styles))(ForgotPassword))\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Input from '@material-ui/core/Input'\r\nimport Button from '@material-ui/core/Button'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\n\r\nimport Preloader from '../../../components/Preloader'\r\nimport {resetPasswordOperations} from 'store/resetPassword'\r\n\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    width: 'auto',\r\n    display: 'block', // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto'\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing.unit\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3\r\n  },\r\n  email: {\r\n    display: 'block',\r\n    fontSize: '12px'\r\n  },\r\n  hidden: {\r\n    display: 'none'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    textAlign: 'center'\r\n  }\r\n})\r\n\r\nclass ResetPassword extends Component {\r\n  render () {\r\n    const {classes, isLoading, isFormSubmitted, arePasswordsDifferent} = this.props\r\n    const token = getToken()\r\n\r\n    const resetPasswordForm = (\r\n      <div className={classes.wrapper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Reset password\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          onSubmit={this.props.submitResetPasswordForm}>\r\n          {arePasswordsDifferent &&\r\n          <Typography component=\"h2\" color=\"error\">\r\n            Passwords do not match!\r\n          </Typography>}\r\n          <FormControl className={classes.hidden} required>\r\n            <Input name=\"token\" type=\"text\" id=\"token\" value={token}/>\r\n          </FormControl>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"password\" error={arePasswordsDifferent}>Password</InputLabel>\r\n            <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\"/>\r\n          </FormControl>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"password\" error={arePasswordsDifferent}>Password Confirmation</InputLabel>\r\n            <Input name=\"passwordConfirmation\" type=\"password\" id=\"passwordConfirmation\"/>\r\n          </FormControl>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}>\r\n            Confirm password\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    )\r\n\r\n    const afterSubmitContent = (\r\n      <div className={classes.wrapper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Password was changed\r\n        </Typography>\r\n        <Button component={NavLink} to={'/login'}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}>\r\n          Back to Login\r\n        </Button>\r\n      </div>\r\n    )\r\n\r\n    return (\r\n      <main className={classes.main}>\r\n        <Paper className={classes.paper}>\r\n          {isLoading && <Preloader/>}\r\n          {!isLoading && !isFormSubmitted && resetPasswordForm}\r\n          {isFormSubmitted && afterSubmitContent}\r\n        </Paper>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nconst getToken = () => {\r\n  const tokenArray = window.location.href.split('/')\r\n  return tokenArray[tokenArray.length - 1]\r\n}\r\n\r\nconst mapStateToProps = ({resetPassword}) => ({\r\n  isFormSubmitted: resetPassword.isFormSubmitted,\r\n  isLoading: resetPassword.isLoading,\r\n  arePasswordsDifferent: resetPassword.arePasswordsDifferent\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  submitResetPasswordForm: (event) => dispatch(resetPasswordOperations.submitResetPasswordForm(event))\r\n})\r\n\r\nResetPassword.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)((withStyles(styles))(ResetPassword))\r\n","import React, {Component} from 'react'\r\nimport {Redirect, Route, Switch, withRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Admin from './admin'\r\n\r\nimport Login from './auth/login'\r\nimport ForgotPassword from './auth/forgotPassword'\r\nimport ResetPassword from './auth/resetPassword'\r\n\r\nclass AppRoutes extends Component {\r\n  render () {\r\n    const {currentUser} = this.props\r\n\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/login\" component={Login}/>\r\n        <Route path=\"/forgot-password\" component={ForgotPassword}/>\r\n        <Route path=\"/reset-password\" component={ResetPassword}/>\r\n        <ProtectedRoute path=\"/\" component={Admin} authenticated={!!currentUser}/>\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n\r\nexport const ProtectedRoute = ({component: Component, authenticated, ...rest}) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      authenticated ? <Component {...props} /> : <Redirect to=\"/login\"/>\r\n    }\r\n  />\r\n)\r\n\r\nconst mapStateToProps = ({users}) => {\r\n  return {\r\n    currentUser: users.currentUser,\r\n  }\r\n}\r\n\r\nAppRoutes.propTypes = {\r\n  currentUser: PropTypes.object\r\n}\r\n\r\nProtectedRoute.propTypes = {\r\n  component: PropTypes.func.isRequired,\r\n  authenticated: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(AppRoutes))\r\n","import React from 'react'\r\nimport ReduxToastr from 'react-redux-toastr'\r\n\r\nconst ToastrMessage = (props) => (\r\n  <ReduxToastr\r\n    timeOut={4000}\r\n    newestOnTop={false}\r\n    preventDuplicates\r\n    position=\"top-left\"\r\n    transitionIn=\"fadeIn\"\r\n    transitionOut=\"fadeOut\"\r\n    progressBar\r\n    closeOnToastrClick\r\n  />\r\n)\r\n\r\nexport default ToastrMessage\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router'\r\n\r\nimport CssBaseline from '@material-ui/core/es/CssBaseline/CssBaseline'\r\n\r\nimport Preloader from './components/Preloader'\r\nimport {usersOperations} from 'store/users'\r\nimport {default as IndexPage} from './pages/index'\r\nimport ToastrMessage from './components/ToastrMessage'\r\n\r\nclass App extends Component {\r\n  componentDidMount () {\r\n    this.props.getCurrentUser()\r\n  }\r\n\r\n  render () {\r\n    const {isCurrentUserLoading} = this.props\r\n\r\n    if (isCurrentUserLoading) {\r\n      return <div className=\"wrapper\"><Preloader/></div>\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <CssBaseline/>\r\n        <IndexPage/>\r\n        <ToastrMessage/>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({users}) => {\r\n  return {\r\n    currentUser: users.currentUser,\r\n    isCurrentUserLoading: users.isCurrentUserLoading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getCurrentUser: () => dispatch(usersOperations.getCurrentUser())\r\n})\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(App)\r\n)\r\n"],"sourceRoot":""}